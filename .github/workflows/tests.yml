name: tests

on:
  push:
    branches: [ master, v6, renovate/** ]
  pull_request:
    branches: [ master, v6 ]

jobs:
  build:
    name: Build
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout Source code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Enable corepack
        run: |
          corepack enable
          corepack prepare yarn@stable --activate

      # Yarn dependencies cannot be cached until yarn is installed
      # WORKAROUND: https://github.com/actions/setup-node/issues/531
      - name: Extract cached dependencies
        uses: actions/setup-node@v3
        with:
          cache: yarn

      - name: Install
        run: yarn

      - name: Test TS
        run: yarn tsc-check-tests

      - name: Build
        run: yarn build

  docs:
    name: Docs build
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Enable corepack
        run: |
          corepack enable
          corepack prepare yarn@stable --activate

      # Yarn dependencies cannot be cached until yarn is installed
      # WORKAROUND: https://github.com/actions/setup-node/issues/531
      - name: Extract cached dependencies
        uses: actions/setup-node@v3
        with:
          cache: yarn

      - name: Install
        run: yarn

      - name: Build & deploy docs
        run: |
          cd docs
          yarn
          yarn build

  lint:
    name: Lint
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Enable corepack
        run: |
          corepack enable
          corepack prepare yarn@stable --activate

      # Yarn dependencies cannot be cached until yarn is installed
      # WORKAROUND: https://github.com/actions/setup-node/issues/531
      - name: Extract cached dependencies
        uses: actions/setup-node@v3
        with:
          cache: yarn

      - name: Install
        run: yarn

      - name: Lint
        run: yarn lint

  test:
    name: Tests
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 18, 20 ]
        shard: [ 1, 2, 3, 4 ]
    steps:
      - name: Checkout Source code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable corepack
        run: |
          corepack enable
          corepack prepare yarn@stable --activate

      # Yarn dependencies cannot be cached until yarn is installed
      # WORKAROUND: https://github.com/actions/setup-node/issues/531
      - name: Extract cached dependencies
        uses: actions/setup-node@v3
        with:
          cache: yarn

      - name: Install
        run: yarn

      - name: Init docker
        run: |
          docker-compose up -d

      - name: Set CC Required env vars
        run: export GIT_BRANCH=$GITHUB_HEAD_REF && export GIT_COMMIT_SHA=$(git rev-parse origin/$GITHUB_HEAD_REF)

      - name: Check for changes
        id: changed_packages
        run: |
          echo "changed_packages=$(node ./node_modules/.bin/lerna changed -p | wc -l | xargs)" >> $GITHUB_OUTPUT

      - name: Check for changes 2
        if: steps.changed_packages.outputs.changed_packages == '0'
        run: |
          echo "no changes detected by lerna"

      - name: Test
        if: steps.changed_packages.outputs.changed_packages != '0'
        run: |
          yarn coverage --shard=${{ matrix.shard }}/${{ strategy.job-total }}
      - run: mv coverage/coverage-final.json coverage/${{matrix.shard}}.json
      - uses: actions/upload-artifact@v3
        with:
          name: coverage-artifacts
          path: coverage/

      - name: Teardown docker
        run: docker-compose down

  report-coverage:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
      - uses: actions/download-artifact@v3
        with:
          name: coverage-artifacts
          path: coverage
      - name: Merge Code Coverage
        run: |
          npx nyc merge coverage/ coverage/coverage-final.json
      - name: Codecov
        uses: codecov/codecov-action@v3

  publish:
    name: Publish
    if: github.ref == 'refs/heads/v6' && !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    needs: [ test, build, lint ]
    steps:
      - name: Checkout Source code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with:
          fetch-depth: 0 # we need to pull everything to have correct dev version suffix

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Enable corepack
        run: |
          corepack enable
          corepack prepare yarn@stable --activate

      # Yarn dependencies cannot be cached until yarn is installed
      # WORKAROUND: https://github.com/actions/setup-node/issues/531
      - name: Extract cached dependencies
        uses: actions/setup-node@v3
        with:
          cache: yarn

      - name: Install
        run: yarn

      - name: Check for changes
        id: changed_packages
        run: |
          echo "changed_packages=$(node ./node_modules/.bin/lerna changed -p | wc -l | xargs)" >> $GITHUB_OUTPUT

      - name: Check for changes 2
        if: steps.changed_packages.outputs.changed_packages == '0'
        run: |
          echo "no changes detected by lerna"

      - name: Build
        if: steps.changed_packages.outputs.changed_packages != '0'
        run: yarn build

      - name: Release dev version for testing
        if: steps.changed_packages.outputs.changed_packages != '0'
        run: |
          git config --global user.name 'MikroORM Release Bot'
          git config --global user.email 'noreply@mikro-orm.io'
          yarn lerna run copy -- -- --canary=major
          git commit -am 'chore: bump canary versions [skip ci]'

          echo "access=public" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          yarn publish:next --yes --no-verify-access
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
